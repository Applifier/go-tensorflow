// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/device_filters.proto

package for_core_protos_go_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines the device filters for a remote task.
type TaskDeviceFilters struct {
	DeviceFilters        []string `protobuf:"bytes,1,rep,name=device_filters,json=deviceFilters,proto3" json:"device_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDeviceFilters) Reset()         { *m = TaskDeviceFilters{} }
func (m *TaskDeviceFilters) String() string { return proto.CompactTextString(m) }
func (*TaskDeviceFilters) ProtoMessage()    {}
func (*TaskDeviceFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_48fe7fa73e9da3a6, []int{0}
}

func (m *TaskDeviceFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDeviceFilters.Unmarshal(m, b)
}
func (m *TaskDeviceFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDeviceFilters.Marshal(b, m, deterministic)
}
func (m *TaskDeviceFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDeviceFilters.Merge(m, src)
}
func (m *TaskDeviceFilters) XXX_Size() int {
	return xxx_messageInfo_TaskDeviceFilters.Size(m)
}
func (m *TaskDeviceFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDeviceFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDeviceFilters proto.InternalMessageInfo

func (m *TaskDeviceFilters) GetDeviceFilters() []string {
	if m != nil {
		return m.DeviceFilters
	}
	return nil
}

// Defines the device filters for tasks in a job.
type JobDeviceFilters struct {
	// The name of this job.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Mapping from task ID to task device filters.
	Tasks                map[int32]*TaskDeviceFilters `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *JobDeviceFilters) Reset()         { *m = JobDeviceFilters{} }
func (m *JobDeviceFilters) String() string { return proto.CompactTextString(m) }
func (*JobDeviceFilters) ProtoMessage()    {}
func (*JobDeviceFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_48fe7fa73e9da3a6, []int{1}
}

func (m *JobDeviceFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobDeviceFilters.Unmarshal(m, b)
}
func (m *JobDeviceFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobDeviceFilters.Marshal(b, m, deterministic)
}
func (m *JobDeviceFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobDeviceFilters.Merge(m, src)
}
func (m *JobDeviceFilters) XXX_Size() int {
	return xxx_messageInfo_JobDeviceFilters.Size(m)
}
func (m *JobDeviceFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_JobDeviceFilters.DiscardUnknown(m)
}

var xxx_messageInfo_JobDeviceFilters proto.InternalMessageInfo

func (m *JobDeviceFilters) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobDeviceFilters) GetTasks() map[int32]*TaskDeviceFilters {
	if m != nil {
		return m.Tasks
	}
	return nil
}

// Defines the device filters for jobs in a cluster.
type ClusterDeviceFilters struct {
	Jobs                 []*JobDeviceFilters `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClusterDeviceFilters) Reset()         { *m = ClusterDeviceFilters{} }
func (m *ClusterDeviceFilters) String() string { return proto.CompactTextString(m) }
func (*ClusterDeviceFilters) ProtoMessage()    {}
func (*ClusterDeviceFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_48fe7fa73e9da3a6, []int{2}
}

func (m *ClusterDeviceFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterDeviceFilters.Unmarshal(m, b)
}
func (m *ClusterDeviceFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterDeviceFilters.Marshal(b, m, deterministic)
}
func (m *ClusterDeviceFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterDeviceFilters.Merge(m, src)
}
func (m *ClusterDeviceFilters) XXX_Size() int {
	return xxx_messageInfo_ClusterDeviceFilters.Size(m)
}
func (m *ClusterDeviceFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterDeviceFilters.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterDeviceFilters proto.InternalMessageInfo

func (m *ClusterDeviceFilters) GetJobs() []*JobDeviceFilters {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskDeviceFilters)(nil), "tensorflow.TaskDeviceFilters")
	proto.RegisterType((*JobDeviceFilters)(nil), "tensorflow.JobDeviceFilters")
	proto.RegisterMapType((map[int32]*TaskDeviceFilters)(nil), "tensorflow.JobDeviceFilters.TasksEntry")
	proto.RegisterType((*ClusterDeviceFilters)(nil), "tensorflow.ClusterDeviceFilters")
}

func init() {
	proto.RegisterFile("tensorflow/core/protobuf/device_filters.proto", fileDescriptor_48fe7fa73e9da3a6)
}

var fileDescriptor_48fe7fa73e9da3a6 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4b, 0x4b, 0xfb, 0x40,
	0x14, 0xc5, 0x99, 0x3e, 0xfe, 0xd0, 0x5b, 0xfe, 0x52, 0x47, 0x17, 0xa1, 0x28, 0x84, 0x82, 0x98,
	0x8d, 0x89, 0xb4, 0x1b, 0x29, 0xb8, 0xa9, 0x0f, 0xc4, 0x55, 0x19, 0x14, 0xc1, 0x4d, 0xc8, 0x63,
	0x12, 0x63, 0x1e, 0x57, 0x66, 0x26, 0x95, 0x7e, 0x08, 0xbf, 0x92, 0x9f, 0xcb, 0xa5, 0x64, 0xb2,
	0x48, 0x52, 0xc5, 0xdd, 0xe1, 0xf0, 0x3b, 0x97, 0x7b, 0x38, 0x70, 0xa6, 0x78, 0x21, 0x51, 0x44,
	0x19, 0xbe, 0x3b, 0x01, 0x0a, 0xee, 0xbc, 0x09, 0x54, 0xe8, 0x97, 0x91, 0x13, 0xf2, 0x4d, 0x12,
	0x70, 0x37, 0x4a, 0x32, 0xc5, 0x85, 0xb4, 0xb5, 0x4f, 0xa1, 0xc1, 0x67, 0x4b, 0xd8, 0x7f, 0xf0,
	0x64, 0x7a, 0xad, 0xb9, 0xdb, 0x1a, 0xa3, 0x27, 0xb0, 0xd7, 0x0d, 0x1a, 0xc4, 0xec, 0x5b, 0x23,
	0xf6, 0x3f, 0x6c, 0x63, 0xb3, 0x4f, 0x02, 0x93, 0x7b, 0xf4, 0xbb, 0x59, 0x0a, 0x83, 0xc2, 0xcb,
	0xb9, 0x41, 0x4c, 0x62, 0x8d, 0x98, 0xd6, 0xf4, 0x12, 0x86, 0xca, 0x93, 0xa9, 0x34, 0x7a, 0x66,
	0xdf, 0x1a, 0xcf, 0x4f, 0xed, 0xe6, 0x01, 0x7b, 0xf7, 0x80, 0x5d, 0xbd, 0x23, 0x6f, 0x0a, 0x25,
	0xb6, 0xac, 0x4e, 0x4d, 0x9f, 0x00, 0x1a, 0x93, 0x4e, 0xa0, 0x9f, 0xf2, 0xad, 0xbe, 0x3f, 0x64,
	0x95, 0xa4, 0x0b, 0x18, 0x6e, 0xbc, 0xac, 0xe4, 0x46, 0xcf, 0x24, 0xd6, 0x78, 0x7e, 0xdc, 0x3e,
	0xff, 0xa3, 0x1c, 0xab, 0xd9, 0x65, 0xef, 0x82, 0xcc, 0xee, 0xe0, 0xf0, 0x2a, 0x2b, 0xa5, 0xe2,
	0xa2, 0xdb, 0xe1, 0x1c, 0x06, 0xaf, 0xe8, 0xd7, 0xad, 0xc7, 0xf3, 0xa3, 0xbf, 0xde, 0x65, 0x9a,
	0x5c, 0x7d, 0x10, 0x98, 0xa2, 0x88, 0xdb, 0x64, 0x98, 0x48, 0x25, 0xca, 0x42, 0x25, 0x39, 0x5f,
	0x1d, 0x74, 0x32, 0xeb, 0x6a, 0x05, 0xb9, 0x26, 0xcf, 0x8f, 0x71, 0xa2, 0x5e, 0x4a, 0xdf, 0x0e,
	0x30, 0x77, 0x5a, 0x13, 0xfe, 0x2e, 0x63, 0xdc, 0xd9, 0x36, 0x42, 0xe1, 0x56, 0x8e, 0xab, 0x1d,
	0xe9, 0xc6, 0x58, 0xab, 0x2f, 0x42, 0xfc, 0x7f, 0x5a, 0x2d, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x10, 0x5d, 0xdb, 0x8d, 0x1a, 0x02, 0x00, 0x00,
}
