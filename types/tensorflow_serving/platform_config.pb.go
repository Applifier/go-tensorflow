// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tensorflow_serving/platform_config.proto

package tensorflow_serving

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Configuration for a servable platform e.g. tensorflow or other ML systems.
type PlatformConfig struct {
	// The config proto for a SourceAdapter in the StoragePathSourceAdapter
	// registry.
	SourceAdapterConfig *types.Any `protobuf:"bytes,1,opt,name=source_adapter_config,json=sourceAdapterConfig,proto3" json:"source_adapter_config,omitempty"`
}

func (m *PlatformConfig) Reset()         { *m = PlatformConfig{} }
func (m *PlatformConfig) String() string { return proto.CompactTextString(m) }
func (*PlatformConfig) ProtoMessage()    {}
func (*PlatformConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_74d88137587e5501, []int{0}
}
func (m *PlatformConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlatformConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlatformConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlatformConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformConfig.Merge(m, src)
}
func (m *PlatformConfig) XXX_Size() int {
	return m.Size()
}
func (m *PlatformConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformConfig proto.InternalMessageInfo

func (m *PlatformConfig) GetSourceAdapterConfig() *types.Any {
	if m != nil {
		return m.SourceAdapterConfig
	}
	return nil
}

type PlatformConfigMap struct {
	// A map from a platform name to a platform config. The platform name is used
	// in ModelConfig.model_platform.
	PlatformConfigs map[string]*PlatformConfig `protobuf:"bytes,1,rep,name=platform_configs,json=platformConfigs,proto3" json:"platform_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *PlatformConfigMap) Reset()         { *m = PlatformConfigMap{} }
func (m *PlatformConfigMap) String() string { return proto.CompactTextString(m) }
func (*PlatformConfigMap) ProtoMessage()    {}
func (*PlatformConfigMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_74d88137587e5501, []int{1}
}
func (m *PlatformConfigMap) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlatformConfigMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlatformConfigMap.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlatformConfigMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformConfigMap.Merge(m, src)
}
func (m *PlatformConfigMap) XXX_Size() int {
	return m.Size()
}
func (m *PlatformConfigMap) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformConfigMap.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformConfigMap proto.InternalMessageInfo

func (m *PlatformConfigMap) GetPlatformConfigs() map[string]*PlatformConfig {
	if m != nil {
		return m.PlatformConfigs
	}
	return nil
}

func init() {
	proto.RegisterType((*PlatformConfig)(nil), "tensorflow.serving.PlatformConfig")
	proto.RegisterType((*PlatformConfigMap)(nil), "tensorflow.serving.PlatformConfigMap")
	proto.RegisterMapType((map[string]*PlatformConfig)(nil), "tensorflow.serving.PlatformConfigMap.PlatformConfigsEntry")
}

func init() {
	proto.RegisterFile("tensorflow_serving/platform_config.proto", fileDescriptor_74d88137587e5501)
}

var fileDescriptor_74d88137587e5501 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x28, 0x49, 0xcd, 0x2b,
	0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0x8f, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0xcc, 0x4b, 0xd7, 0x2f,
	0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f, 0xca, 0x8d, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x42, 0xa8, 0xd4, 0x83, 0xaa, 0x94, 0x92, 0x4c, 0xcf, 0xcf,
	0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xab, 0x48, 0x2a, 0x4d, 0xd3, 0x4f, 0xcc, 0xab, 0x84, 0x28, 0x57,
	0x8a, 0xe2, 0xe2, 0x0b, 0x80, 0x9a, 0xe3, 0x0c, 0x36, 0x46, 0xc8, 0x83, 0x4b, 0xb4, 0x38, 0xbf,
	0xb4, 0x28, 0x39, 0x35, 0x3e, 0x31, 0x25, 0xb1, 0xa0, 0x24, 0xb5, 0x08, 0x6a, 0xbe, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0xb7, 0x91, 0x88, 0x1e, 0xc4, 0x30, 0x3d, 0x98, 0x61, 0x7a, 0x8e, 0x79, 0x95,
	0x41, 0xc2, 0x10, 0x2d, 0x8e, 0x10, 0x1d, 0x10, 0x93, 0x94, 0x1e, 0x31, 0x72, 0x09, 0xa2, 0x1a,
	0xee, 0x9b, 0x58, 0x20, 0x94, 0xca, 0x25, 0x80, 0xe6, 0xf2, 0x62, 0x09, 0x46, 0x05, 0x66, 0x0d,
	0x6e, 0x23, 0x2b, 0x3d, 0x4c, 0xb7, 0xeb, 0x61, 0x18, 0x80, 0x26, 0x52, 0xec, 0x9a, 0x57, 0x52,
	0x54, 0x19, 0xc4, 0x5f, 0x80, 0x2a, 0x2a, 0x95, 0xc6, 0x25, 0x82, 0x4d, 0xa1, 0x90, 0x00, 0x17,
	0x73, 0x76, 0x6a, 0x25, 0xd8, 0x33, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x05, 0x17, 0x6b, 0x59, 0x62,
	0x4e, 0x69, 0xaa, 0x04, 0x13, 0xd8, 0x83, 0x4a, 0x84, 0x5d, 0x11, 0x04, 0xd1, 0x60, 0xc5, 0x64,
	0xc1, 0xe8, 0x24, 0x7d, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31,
	0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x3f, 0x18, 0x19,
	0x93, 0xd8, 0xc0, 0x81, 0x64, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x73, 0x66, 0xbd, 0x68, 0xbf,
	0x01, 0x00, 0x00,
}

func (m *PlatformConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlatformConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlatformConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SourceAdapterConfig != nil {
		{
			size, err := m.SourceAdapterConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPlatformConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PlatformConfigMap) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlatformConfigMap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlatformConfigMap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlatformConfigs) > 0 {
		for k := range m.PlatformConfigs {
			v := m.PlatformConfigs[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintPlatformConfig(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintPlatformConfig(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintPlatformConfig(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintPlatformConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovPlatformConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PlatformConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SourceAdapterConfig != nil {
		l = m.SourceAdapterConfig.Size()
		n += 1 + l + sovPlatformConfig(uint64(l))
	}
	return n
}

func (m *PlatformConfigMap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PlatformConfigs) > 0 {
		for k, v := range m.PlatformConfigs {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovPlatformConfig(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovPlatformConfig(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovPlatformConfig(uint64(mapEntrySize))
		}
	}
	return n
}

func sovPlatformConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPlatformConfig(x uint64) (n int) {
	return sovPlatformConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PlatformConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlatformConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlatformConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlatformConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceAdapterConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceAdapterConfig == nil {
				m.SourceAdapterConfig = &types.Any{}
			}
			if err := m.SourceAdapterConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPlatformConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlatformConfigMap) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlatformConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlatformConfigMap: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlatformConfigMap: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformConfigs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlatformConfigs == nil {
				m.PlatformConfigs = make(map[string]*PlatformConfig)
			}
			var mapkey string
			var mapvalue *PlatformConfig
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPlatformConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPlatformConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthPlatformConfig
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthPlatformConfig
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPlatformConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthPlatformConfig
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthPlatformConfig
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &PlatformConfig{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipPlatformConfig(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthPlatformConfig
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.PlatformConfigs[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPlatformConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPlatformConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPlatformConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPlatformConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlatformConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlatformConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPlatformConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPlatformConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPlatformConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPlatformConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPlatformConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPlatformConfig = fmt.Errorf("proto: unexpected end of group")
)
